#!/bin/bash

set -euo pipefail
# -e	Exit immediately if any command returns a non-zero status (an error). Prevents scripts from continuing after a failure.
# -u	Treat unset variables as errors and exit immediately. Helps catch typos and missing env vars.
# -o pipefail	Fail a pipeline if any command in the pipeline fails (not just the last one). Improves reliability of `grep

PUB_KEY_PATH="$HOME/.ssh/id_ed25519.pub"
PUB_KEY=$(< "$PUB_KEY_PATH")
GITHUB_USERNAME=$(chezmoi git remote get-url origin | sed -E 's#.*[:/]([^/]+)/[^/]+\.git#\1#')
GITHUB_TOKEN=$(ks show github)
HOSTNAME=$(hostname)
KEY_TITLE="host_$HOSTNAME"

echo "Checking if SSH key is already on GitHub..."

EXISTING_KEYS=$(curl -s -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/user/keys)
if echo "$EXISTING_KEYS" | grep -q "$(echo "$PUB_KEY" | cut -d' ' -f2)"; then
  echo "Public key already exists on GitHub."
else
  echo "Uploading public key to GitHub..."

  RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" \
    -X POST \
    -H "Authorization: token $GITHUB_TOKEN" \
    -d "{\"title\": \"$KEY_TITLE\", \"key\": \"$PUB_KEY\"}" \
    https://api.github.com/user/keys)

  if [[ "$RESPONSE" == "201" ]]; then
    echo "SSH public key uploaded to GitHub."
  else
    echo "Failed to upload SSH key. HTTP response code: $RESPONSE"
    exit 1
  fi
fi
